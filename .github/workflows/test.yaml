name: Test

on:
  # Allows for manual triggering through api
  workflow_dispatch:

defaults:
    run:
      shell: bash

jobs:
  merge:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.important.outputs.status }}
    steps:

      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: git
        id: git-setup
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          LAST_STAGING_TS=$(git log -n 1 --pretty=format:"%h%x09%ct%x09%s" origin/staging | awk '{print $2}')
          COMMITS="$(git log --pretty=format:'%h%x09%cI%x09%s' --since=format:ct:$LAST_STAGING_TS origin/main)"
          echo "::set-output name=commits::$COMMITS"
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: important step
        id: important
        if: ${{ steps.git-setup.outputs.commits != '' }}
        run: |
          echo "This ran"
          echo "status=good" >> $GITHUB_OUTPUT
          COMMITS_BULLET="$(echo "$COMMITS" | sed 's/^\(.\)/* \1/')"
          echo "Commits:"
          echo "$COMMITS_BULLET"
          git checkout staging
          git branch merge/staging
          git checkout main
          git merge -m "Merge branch 'merge/staging' into main" -s ours merge/staging
          git checkout merge/staging
          git merge --commit main
          git checkout staging
          git checkout -b staging_new
          git merge --squash merge/staging
          git commit -m "Automated release candidate NEW" -m "$COMMITS_BULLET"
          git log -n 1

      - name: log step
        id: log
        if: ${{ steps.git-setup.outputs.commits != '' }}
        run: |
          COMMIT_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit"
          echo "### Summary $(git rev-parse --short HEAD)" >> $GITHUB_STEP_SUMMARY
          echo "$COMMITS" | sed "s/^\([[:alnum:]]\{7\}\)/* [\`\1\`](${COMMIT_URL//\//\\/}\/\1)/" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: merge
    runs-on: ubuntu-latest
    if: ${{ needs.merge.outputs.status == 'good' }}

    steps:
      - name: do something
        run: |
          echo "deploying..."
